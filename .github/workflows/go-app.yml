name: CI/CD

on: 
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

env: 
  REGISTRY: docker.io
  
jobs:

  build: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Setting Up Go 1.22
      uses: actions/setup-go@v2
      with: 
        go-version: 1.22
        working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code

    - name: Build 
      working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
      run: go build -o go-app

    - name: Test
      working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
      run: go test ./


  Code-Quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
         go-version: 1.22

    - name: Run golang-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.60.3
        working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
        
  Docker-Image-Push: 
    runs-on: ubuntu-latest

    needs: Code-Quality
    outputs:
      image_tag: ${{ steps.meta.outputs.image_tag }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3.5.0

    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set image tag
      id: meta
      run: echo "image_tag=${{ github.run_id }}" >> $GITHUB_OUTPUT

    - name: Build and push
      uses: docker/build-push-action@v6.5.0
      with:
        context: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
        file: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/go-port:${{github.run_id}}

  Image-Scanning:
      runs-on: ubuntu-latest
      needs: Docker-Image-Push
      
      steps:
      
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
      - name: Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves
          image: ${{ secrets.DOCKER_USERNAME }}/go-port:${{ needs.Docker-Image-Push.outputs.image_tag }}
          #to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.COMPARE_TAG }}
          ignore-unchanged: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}


  Updating-helm-tags:
      needs: Image-Scanning
      
      runs-on: ubuntu-latest
      steps:
      
      - name: Cloning the helm repo
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          owner: 'pooja175'
          repository: 'Go-EKS-GitHubActions-Terraform-Helm-ArgoCD'
          access-token: ${{ secrets.REPO_PAT }}
          branch: 'main'


      - name: Updating values in helm
        run: |
          cd Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/chats
          ls
          sed -i 's/tag: .*/tag: "${{github.run_id}}"/' values.yaml

      - name: Pushing changes
        run: |
          cd Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/chats
          git config --global user.email "pooja.shah175@outlook.com"
          git config --global user.name "pooja175"
          git add values.yaml
          git commit -am "Updated values.yaml file"
          git push

      
  
