name: CI/CD

on: 
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

env: 
  REGISTRY: docker.io
  
jobs:

  build: 
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.7

    - name: Setting Up Go 1.22
      uses: actions/setup-go@v5
      with: 
        go-version: 1.22

    - name: Build 
      working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
      run: go build -o go-app

    - name: Test
      working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
      run: go test ./


  Code-Quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
         go-version: 1.22

    - name: Run golang-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.59.1
        working-directory: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
        
  Docker-Image-Push: 
    runs-on: ubuntu-latest

    needs: Code-Quality

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3.5.0

    - name: Login to Dockerhub
      uses: docker/login-action@v3
      with: 
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6.5.0
      with:
        context: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code
        file: Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/Application-source-code/Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/go-port:${{ github.run_id }}

  Image-Scanning:
      runs-on: ubuntu-latest
      needs: Docker-Image-Push
      
      steps:
      
      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        
  Update-Deployment:
    runs-on: ubuntu-latest
    needs: Docker-Image-Push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks --region us-east-1 update-kubeconfig --name dev-ap-medium-eks-cluster

      - name: Update Deployment image tag
        run: |
          kubectl set image deployment/go-portfolio-deployment go-portfolio-container=${{ secrets.DOCKER_USERNAME }}/go-port:${{ github.run_id }} -n go-app

      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/go-portfolio-deployment -n go-app
          kubectl get pods -n go-app
          
      - name: Update Deployment YAML with new image
        run: |
              # Navigate to the folder containing deployment.yaml
              cd Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/chats/k8s
    
              # Replace the image in the container spec
              sed -i 's|image:.*|image: '"${{ secrets.DOCKER_USERNAME }}/go-port:${{ github.run_id }}"'|' deployment.yaml

              # Show the updated file
              cat deployment.yaml
      - name: Commit updated deployment.yaml
        run: |
            git config --global user.email "pooja.shah175@outlook.com"
            git config --global user.name "pooja175"
            git add Go-EKS-GitHubActions-Terraform-Helm-ArgoCD/chats/k8s/deployment.yaml
            git commit -m "Update deployment image to latest"
            git push
              
  Updating-helm-tags:
      needs: Image-Scanning
      
      runs-on: ubuntu-latest
      steps:
      
      - name: Cloning the helm repo
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          owner: 'pooja175'
          repository: 'Go-EKS-GitHubActions-Terraform-Helm-ArgoCD'
          access-token: ${{ secrets.REPO_PAT }}
          branch: 'main'
          path: .





      

